apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.giantswarm.io/branch: '{{ .Values.project.branch }}'
    app.giantswarm.io/commit: '{{ .Values.project.commit }}'
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: gcp-compute-persistent-disk-csi-driver
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: gcp-compute-persistent-disk-csi-driver
  name: csi-gce-pd-controller
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gcp-compute-persistent-disk-csi-driver
  template:
    metadata:
      labels:
        app: gcp-compute-persistent-disk-csi-driver
        giantswarm.io/gcp-workload-identity: enabled
    spec:
      containers:
      - args:
        - --v=5
        - --endpoint=unix:/csi/csi.sock
        env: []
        image: '{{ .Values.image.driver.name }}:{{ .Values.image.driver.tag }}'
        name: gce-pd-driver
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --feature-gates=Topology=true
        - --http-endpoint=:22011
        - --leader-election-namespace=$(PDCSI_NAMESPACE)
        - --timeout=250s
        - --extra-create-metadata
        - --leader-election
        - --default-fstype=ext4
        - --controller-publish-readonly=true
        env:
        - name: PDCSI_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{.Values.image.provisioner.name}}:{{.Values.image.provisioner.tag}}'
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/leader-election
            port: http-endpoint
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
        name: csi-provisioner
        ports:
        - containerPort: 22011
          name: http-endpoint
          protocol: TCP
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --http-endpoint=:22012
        - --leader-election
        - --leader-election-namespace=$(PDCSI_NAMESPACE)
        - --timeout=250s
        env:
        - name: PDCSI_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{ .Values.image.attacher.name }}:{{ .Values.image.attacher.tag }}'
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/leader-election
            port: http-endpoint
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
        name: csi-attacher
        ports:
        - containerPort: 22012
          name: http-endpoint
          protocol: TCP
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --http-endpoint=:22013
        - --leader-election
        - --leader-election-namespace=$(PDCSI_NAMESPACE)
        - --handle-volume-inuse-error=false
        env:
        - name: PDCSI_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{ .Values.image.resizer.name }}:{{ .Values.image.resizer.tag }}'
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/leader-election
            port: http-endpoint
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
        name: csi-resizer
        ports:
        - containerPort: 22013
          name: http-endpoint
          protocol: TCP
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --metrics-address=:22014
        - --leader-election
        - --leader-election-namespace=$(PDCSI_NAMESPACE)
        - --timeout=300s
        env:
        - name: PDCSI_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{.Values.image.snapshotter.name}}:{{.Values.image.snapshotter.tag}}'
        name: csi-snapshotter
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: csi-gce-pd-controller
      serviceAccountName: csi-gce-pd-controller-sa
      volumes:
      - emptyDir: {}
        name: socket-dir
